{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import '../views/Detail.css';\n// import '../views/Boardwrite.css';\n// import {Link} from 'react-router-dom';\n// import { useHistory } from 'react-router'\n// import CKEditor from 'ckeditor4-react-advanced';\n// import {Form} from \"react-bootstrap\";\n// const titleStyle = {\n//     marginBottom: 9,\n//     width: 762,\n//   };\n// function Update(props){\n//     const handleChange = (event) => {\n//     setContent(event.editor.getData())\n//     // setContent(event.target.value);\n//   };\n//     const history = useHistory()\n//     // let Today = new Date();\n//     // let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate()\n//     let pgN = document.location.href.split('/')[4]\n//     let [title , setTitle] = useState(\"\")\n//     let [content , setContent] = useState()\n//     let [detailList, setDetailList] = useState({});\n//     let [detailUserInfo, setDetailUserInfo] = useState({});\n//     let [detailDate, setDetailDate] = useState();\n//     let [detailLang, setDetailLang] = useState([]);\n//     let [usergrade, setUserGrade] = useState()\n//     let [currnetUser, setCurrentUser] = useState({});\n//     let [urls, setUrls] = useState()\n//     let Today = new Date();\n//     let date = Today.getFullYear() + \"년\" + Today.getMonth() + \"월\" + Today.getDate() + \"일\"\n//     useEffect(()=>{\n//         fetch('http://39.118.174.168:8000/api/current_user/', {\n//                 headers: {\n//                     Authorization: `JWT ${localStorage.getItem('token')}`\n//                 }\n//                 })\n//                 .then(res => res.json())\n//                 .then(json => {\n//                 fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\n//                         method : 'PATCH',\n//                         headers: {\n//                             Authorization: `JWT ${localStorage.getItem('token')}`\n//                         },\n//                     })\n//                     .then((res)=>res.json())\n//                     .then((userData)=> {\n//                         setCurrentUser(userData);\n//                         setUserPhoto(userData.photo);\n//                         setUserGrade(userData.grade);\n//                         setUser_id(userData.user_id);\n//                         setUserNickname(userData.nickname);\n//                         if(userData.grade===4){\n//                             setUserGrade(\"일반 수강생\");\n//                             setUrls(\"student/\");\n//                           } else if(userData.grade===3){\n//                             setUserGrade(\"프리미엄 수강생\");\n//                             setUrls(\"premiumst/\");\n//                           } else if(userData.grade===2){\n//                             setUserGrade(\"일반 파트너\");\n//                             setUrls(\"partner/\");\n//                           } else if(userData.grade===1){\n//                             setUserGrade(\"프리미엄 파트너\");\n//                             setUrls(\"premium/\");\n//                           } else{\n//                             history.push('/profile');\n//                             alert(\"티어인증이 필요합니다\");\n//                           }\n//                     })\n//                 })  \n//         fetch('http://39.118.174.168:8000/board/'+ urls + pgN + \"/\")\n//         .then((res)=>res.json())\n//             .then((posts)=>{\n//                 // console.log(urls);\n//                 setDetailList(posts)\n//                 let Y = posts.pub_date.split('-')[0]\n//                 let M = posts.pub_date.split('-')[1]\n//                 let D = posts.pub_date.split('-')[2].split('T')[0]\n//                 setDetailDate(Y + \"년 \" + M + \"월 \" + D + \"일\")\n//                 setDetailLang(posts.infomation.split(','))\n//                 fetch('http://39.118.174.168:8000/api/profile/' + posts.user_id + '/')\n//                 .then((res)=>res.json())\n//                 .then((info)=>{\n//                     setDetailUserInfo(info)\n//                 })\n//             })\n//     },[pgN,urls,history])\n//     const handleSubmit = () => {\n//         let form_data = new FormData();\n//         form_data.append('category', sendData.grade);\n//         form_data.append('title', sendData.title);\n//         form_data.append('contents', sendData.content);\n//         form_data.append('pub_date', sendData.date);\n//         form_data.append('infomation', sendData.infomation);\n//         form_data.append('nickname', sendData.nickname);\n//         form_data.append('profileImage', sendData.profileImage)\n//         form_data.append('user_id', sendData.user_id);\n//         fetch(\"http://39.118.174.168:8000/board/\" + urls + pgN + \"/update/\", {\n//             method : 'PATCH',\n//             headers: {\n//                 Authorization : `JWT ${localStorage.getItem('token')}`,\n//             },\n//             body : form_data\n//         })\n//         .then(res => res.json())\n//         .catch(error => console.error('Error:', error))\n//         .then(response => console.log('Success:', JSON.stringify(response)))\n//         // .then(history.push(\"urls/\"))\n//         // window.location.href =\"/\" + urls\n//         .then(history.go(1));\n//     };\n//     const handleEffect = (handleSubmit) => {\n//         sendData = {\n//             title : title,\n//             content : content,\n//             date : date,\n//             nickname : userNickname,\n//             infomation : InfomationfilterList,\n//             profileImage : userPhoto,\n//             user_id : user_id,\n//             grade : usergrade\n//         }\n//         handleSubmit()\n//     }\n//     let sendData;\n//     let [userNickname, setUserNickname] = useState()\n//     let [user_id, setUser_id] = useState()\n//     let [filterList] = useState([{id : 1, infomation: '챌린저'}, {id : 2, infomation : '그랜드마스터'},\n//     {id : 3, infomation : '마스터'}, {id : 4, infomation :'다이아몬드'}, {id : 5, infomation:'플레티넘'},\n//     {id : 6, infomation:'골드'}, {id : 7, infomation:'실버'}, {id : 8, infomation:'브론즈'}, {id : 9, infomation:'아이언'}])\n//     let [InfomationfilterList, setInfomationFilterList] = useState(\"\")\n//     let [userPhoto, setUserPhoto] = useState()\n//     const ClickFilter = (lang)=>{\n//         let Num = 0;\n//         let List = [...InfomationfilterList]\n//         List.map((a)=>{\n//             if(a === lang){\n//                 Num = 1;\n//             }\n//             return Num;\n//         })\n//         if (Num === 0) {\n//             List.push(lang)\n//         }else{\n//             List.splice(List.indexOf(lang),1)\n//         }\n//         setInfomationFilterList(List)\n//     }\n//     return(\n//         <>\n//             <div className=\"detail__container\">\n//                 <div className=\"detail__head-wrapper\">\n//                     <h1>{detailList.title}</h1>\n//                     <div className=\"detail__head-btn\">\n//                         {\n//                         }\n//                     </div>\n//                     <div className=\"detail__head-info\">\n//                         <div className=\"information\">\n//                             <span className=\"detail__head-username\">{detailList.nickname}</span>\n//                             <span className=\"separator\">·</span>\n//                             <span>{detailDate}{detailList.updateCount === 0 ? null : \"  ·  작성됨\"}</span>\n//                         </div>\n//                         <div className=\"detail__head-mobileLike\">\n//                             <button className=\"likeBtn\">\n//                                 <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\n//                             </button>\n//                         </div>\n//                     </div>\n//                     <div className=\"filetrList\">\n//                     {\n//                         detailLang.map((a, i)=>{\n//                             return(\n//                                 <p key={i}>#{a}</p>\n//                             )\n//                         })\n//                     }\n//                     </div>\n//                     {\n//                         detailList.image === null\n//                         ? null\n//                         : <img src={detailList.image} alt=\"\"></img>\n//                     }\n//                 </div>\n//                 <div className=\"detail__body-wrapper\">\n//                     <div className=\"detail__content\">\n//                     <Form.Control\n//                     type = \"text\"\n//                     style = {titleStyle}\n//                     placeholder = {detailList.title}\n//                     value = {title}\n//                     onChange = {(e)=>{setTitle(e.target.value)}}/>\n//                     <CKEditor \n//                     onChange = {handleChange}\n//                     config={{\n//                     extraPlugins: 'print,format,font,colorbutton,justify,uploadimage,image2',\n//                     filebrowserUploadMethod  : \"form\",\n//                     uiColor: \"#AADC6E\",\n//                     // filebrowserBrowseUrl: 'https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?type=Files',\n//                     // filebrowserUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?type=Files\",\n//                     filebrowserUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/\",\n//                     filebrowserImageUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Images&responseType=json\",\n//                     filebrowserBrowseUrl: 'https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/',\n//                     filebrowserImageBorwseUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?Type=Images\",\n//                 }}\n//                  />\n//                  {\n//                  detailList.user_id === currnetUser.user_id || currnetUser.Tier === \"운영자\"\n//                  ?(\n//                  <button className=\"upButton\"\n//                   onClick={()=>{\n//                     handleEffect(handleSubmit) \n//                   }}>\n//                 출간하기</button>\n//                 )\n//                 : null\n//                 }\n//                         {/* <p dangerouslySetInnerHTML={{\n//                             __html: detailList.contents\n//                         }}></p> */}\n//                     </div>\n//                 </div>\n//                 <div className=\"detail__footer-wrapper\">\n//                     <div className=\"detail__writerInfo\">\n//                         <div className=\"detail__topInfo\">\n//                             <Link to={\"/mysite/\" + detailList.id}>\n//                                 <img src={detailList.profileImage} alt=\"\"></img>\n//                             </Link>\n//                             <div className=\"detail__userInfo\">\n//                                 <div className=\"description\">{detailUserInfo.myInfo}</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"sc-epnACN eIoWCE\"></div>\n//                         <div className=\"detail__buttomInfo\">\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <div className=\"detail__comment-wrapper\">\n//                     {/* <h4>{commentList.length + reCommentList.length}개의 댓글</h4> */}\n//                     <div className=\"detail__comment-width\">\n//                         {/* <div>\n//                             <textarea ref={commentTxt} defaultValue=\"\" placeholder=\"댓글을 작성하세요\" className=\"comment__textarea\" onChange={(e)=>{setCommentContent(e.target.value)}}></textarea>\n//                             <div className=\"buttons-wrapper\">\n//                                 <button className=\"comment__btn\" onClick={()=>{CommentEffect(CommentSubmit)}}>댓글 작성</button>\n//                             </div>\n//                         </div> */}\n//                         <div className=\"margin__top\">\n//                             <div></div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <aside className=\"pDRpRs\">\n//             <div className=\"eyrfCGs\">\n//               <div className=\"filter__heads\" />\n//                 <ul style={{ listStyleType: \"none\"}}>\n//                  {\n//                     filterList.map((a)=>{\n//                         return(\n//                         <li key={a.id}>\n//                             <input id={a.infomation} className=\"filters-input__checkboxs\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\n//                             <label className=\"input__labels\" htmlFor={a.infomation} onClick={()=>{ClickFilter(a.infomation)}}>\n//                               <span> {a.infomation} </span>\n//                                <span className=\"filters-input__ticks\">\n//                                 <svg \n//                                 width=\"13\"\n//                                 height=\"13\">\n//                                 <use xlinkHref=\"#check\">\n//                                 <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\n//                                 </use>\n//                                 </svg>\n//                               </span>\n//                             </label>\n//                         </li>\n//                         )\n//                     })\n//                   }\n//                 </ul>\n//                </div>  \n//             </aside>\n//         </>\n//     )\n// }\n// export default Update;","map":{"version":3,"sources":["C:/django-react/frontend/src/views/Update.js"],"names":[],"mappingssourcesContent":["// import React, { useState, useEffect } from 'react';\n// import '../views/Detail.css';\n// import '../views/Boardwrite.css';\n// import {Link} from 'react-router-dom';\n// import { useHistory } from 'react-router'\n// import CKEditor from 'ckeditor4-react-advanced';\n// import {Form} from \"react-bootstrap\";\n\n\n// const titleStyle = {\n//     marginBottom: 9,\n//     width: 762,\n\n//   };\n\n  \n// function Update(props){\n//     const handleChange = (event) => {\n//     setContent(event.editor.getData())\n//     // setContent(event.target.value);\n//   };\n//     const history = useHistory()\n//     // let Today = new Date();\n//     // let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate()\n\n//     let pgN = document.location.href.split('/')[4]\n//     let [title , setTitle] = useState(\"\")\n//     let [content , setContent] = useState()\n//     let [detailList, setDetailList] = useState({});\n//     let [detailUserInfo, setDetailUserInfo] = useState({});\n//     let [detailDate, setDetailDate] = useState();\n//     let [detailLang, setDetailLang] = useState([]);\n//     let [usergrade, setUserGrade] = useState()\n//     let [currnetUser, setCurrentUser] = useState({});\n//     let [urls, setUrls] = useState()\n//     let Today = new Date();\n//     let date = Today.getFullYear() + \"년\" + Today.getMonth() + \"월\" + Today.getDate() + \"일\"\n    \n//     useEffect(()=>{\n//         fetch('http://39.118.174.168:8000/api/current_user/', {\n//                 headers: {\n//                     Authorization: `JWT ${localStorage.getItem('token')}`\n//                 }\n//                 })\n//                 .then(res => res.json())\n//                 .then(json => {\n//                 fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\n//                         method : 'PATCH',\n//                         headers: {\n//                             Authorization: `JWT ${localStorage.getItem('token')}`\n//                         },\n//                     })\n//                     .then((res)=>res.json())\n//                     .then((userData)=> {\n//                         setCurrentUser(userData);\n//                         setUserPhoto(userData.photo);\n//                         setUserGrade(userData.grade);\n//                         setUser_id(userData.user_id);\n//                         setUserNickname(userData.nickname);\n//                         if(userData.grade===4){\n//                             setUserGrade(\"일반 수강생\");\n//                             setUrls(\"student/\");\n//                           } else if(userData.grade===3){\n//                             setUserGrade(\"프리미엄 수강생\");\n//                             setUrls(\"premiumst/\");\n//                           } else if(userData.grade===2){\n//                             setUserGrade(\"일반 파트너\");\n//                             setUrls(\"partner/\");\n//                           } else if(userData.grade===1){\n//                             setUserGrade(\"프리미엄 파트너\");\n//                             setUrls(\"premium/\");\n//                           } else{\n//                             history.push('/profile');\n//                             alert(\"티어인증이 필요합니다\");\n//                           }\n//                     })\n//                 })  \n                \n//         fetch('http://39.118.174.168:8000/board/'+ urls + pgN + \"/\")\n//         .then((res)=>res.json())\n//             .then((posts)=>{\n//                 // console.log(urls);\n//                 setDetailList(posts)\n//                 let Y = posts.pub_date.split('-')[0]\n//                 let M = posts.pub_date.split('-')[1]\n//                 let D = posts.pub_date.split('-')[2].split('T')[0]\n//                 setDetailDate(Y + \"년 \" + M + \"월 \" + D + \"일\")\n//                 setDetailLang(posts.infomation.split(','))\n                \n//                 fetch('http://39.118.174.168:8000/api/profile/' + posts.user_id + '/')\n//                 .then((res)=>res.json())\n//                 .then((info)=>{\n//                     setDetailUserInfo(info)\n//                 })\n//             })\n//     },[pgN,urls,history])\n\n//     const handleSubmit = () => {\n//         let form_data = new FormData();\n//         form_data.append('category', sendData.grade);\n//         form_data.append('title', sendData.title);\n//         form_data.append('contents', sendData.content);\n//         form_data.append('pub_date', sendData.date);\n//         form_data.append('infomation', sendData.infomation);\n//         form_data.append('nickname', sendData.nickname);\n//         form_data.append('profileImage', sendData.profileImage)\n//         form_data.append('user_id', sendData.user_id);\n        \n//         fetch(\"http://39.118.174.168:8000/board/\" + urls + pgN + \"/update/\", {\n//             method : 'PATCH',\n//             headers: {\n//                 Authorization : `JWT ${localStorage.getItem('token')}`,\n//             },\n//             body : form_data\n//         })\n//         .then(res => res.json())\n//         .catch(error => console.error('Error:', error))\n//         .then(response => console.log('Success:', JSON.stringify(response)))\n//         // .then(history.push(\"urls/\"))\n//         // window.location.href =\"/\" + urls\n        \n//         .then(history.go(1));\n//     };\n\n\n//     const handleEffect = (handleSubmit) => {\n//         sendData = {\n//             title : title,\n//             content : content,\n//             date : date,\n//             nickname : userNickname,\n//             infomation : InfomationfilterList,\n//             profileImage : userPhoto,\n//             user_id : user_id,\n//             grade : usergrade\n//         }\n//         handleSubmit()\n//     }\n//     let sendData;\n\n//     let [userNickname, setUserNickname] = useState()\n//     let [user_id, setUser_id] = useState()\n//     let [filterList] = useState([{id : 1, infomation: '챌린저'}, {id : 2, infomation : '그랜드마스터'},\n//     {id : 3, infomation : '마스터'}, {id : 4, infomation :'다이아몬드'}, {id : 5, infomation:'플레티넘'},\n//     {id : 6, infomation:'골드'}, {id : 7, infomation:'실버'}, {id : 8, infomation:'브론즈'}, {id : 9, infomation:'아이언'}])\n//     let [InfomationfilterList, setInfomationFilterList] = useState(\"\")\n    \n\n\n//     let [userPhoto, setUserPhoto] = useState()\n\n//     const ClickFilter = (lang)=>{\n//         let Num = 0;\n//         let List = [...InfomationfilterList]\n        \n//         List.map((a)=>{\n//             if(a === lang){\n//                 Num = 1;\n//             }\n//             return Num;\n//         })\n//         if (Num === 0) {\n//             List.push(lang)\n//         }else{\n//             List.splice(List.indexOf(lang),1)\n//         }\n//         setInfomationFilterList(List)\n//     }\n    \n\n//     return(\n//         <>\n//             <div className=\"detail__container\">\n//                 <div className=\"detail__head-wrapper\">\n//                     <h1>{detailList.title}</h1>\n//                     <div className=\"detail__head-btn\">\n//                         {\n                 \n//                         }\n//                     </div>\n//                     <div className=\"detail__head-info\">\n//                         <div className=\"information\">\n//                             <span className=\"detail__head-username\">{detailList.nickname}</span>\n//                             <span className=\"separator\">·</span>\n//                             <span>{detailDate}{detailList.updateCount === 0 ? null : \"  ·  작성됨\"}</span>\n//                         </div>\n//                         <div className=\"detail__head-mobileLike\">\n//                             <button className=\"likeBtn\">\n//                                 <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\n//                             </button>\n//                         </div>\n//                     </div>\n                    \n                   \n//                     <div className=\"filetrList\">\n//                     {\n//                         detailLang.map((a, i)=>{\n//                             return(\n//                                 <p key={i}>#{a}</p>\n//                             )\n//                         })\n//                     }\n//                     </div>\n//                     {\n//                         detailList.image === null\n//                         ? null\n//                         : <img src={detailList.image} alt=\"\"></img>\n//                     }\n                   \n//                 </div>\n//                 <div className=\"detail__body-wrapper\">\n//                     <div className=\"detail__content\">\n//                     <Form.Control\n//                     type = \"text\"\n//                     style = {titleStyle}\n//                     placeholder = {detailList.title}\n//                     value = {title}\n//                     onChange = {(e)=>{setTitle(e.target.value)}}/>\n                    \n//                     <CKEditor \n//                     onChange = {handleChange}\n//                     config={{\n//                     extraPlugins: 'print,format,font,colorbutton,justify,uploadimage,image2',\n//                     filebrowserUploadMethod  : \"form\",\n//                     uiColor: \"#AADC6E\",\n//                     // filebrowserBrowseUrl: 'https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?type=Files',\n//                     // filebrowserUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?type=Files\",\n//                     filebrowserUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/\",\n//                     filebrowserImageUploadUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/ckfinder/core/connector/php/connector.php?command=QuickUpload&type=Images&responseType=json\",\n//                     filebrowserBrowseUrl: 'https://photos.app.goo.gl/SANrgCwEDWP8A2aP7/',\n//                     filebrowserImageBorwseUrl :\"https://photos.app.goo.gl/SANrgCwEDWP8A2aP7?Type=Images\",\n        \n//                 }}\n                \n//                  />\n//                  {\n                \n//                  detailList.user_id === currnetUser.user_id || currnetUser.Tier === \"운영자\"\n//                  ?(\n//                  <button className=\"upButton\"\n//                   onClick={()=>{\n//                     handleEffect(handleSubmit) \n//                   }}>\n\n//                 출간하기</button>\n//                 )\n//                 : null\n//                 }\n                \n//                         {/* <p dangerouslySetInnerHTML={{\n//                             __html: detailList.contents\n//                         }}></p> */}\n//                     </div>\n//                 </div>\n\n//                 <div className=\"detail__footer-wrapper\">\n//                     <div className=\"detail__writerInfo\">\n//                         <div className=\"detail__topInfo\">\n//                             <Link to={\"/mysite/\" + detailList.id}>\n//                                 <img src={detailList.profileImage} alt=\"\"></img>\n//                             </Link>\n//                             <div className=\"detail__userInfo\">\n//                                 <div className=\"description\">{detailUserInfo.myInfo}</div>\n//                             </div>\n//                         </div>\n//                         <div className=\"sc-epnACN eIoWCE\"></div>\n//                         <div className=\"detail__buttomInfo\">\n                      \n//                         </div>\n//                     </div>\n//                 </div>\n\n//                 <div className=\"detail__comment-wrapper\">\n//                     {/* <h4>{commentList.length + reCommentList.length}개의 댓글</h4> */}\n//                     <div className=\"detail__comment-width\">\n//                         {/* <div>\n//                             <textarea ref={commentTxt} defaultValue=\"\" placeholder=\"댓글을 작성하세요\" className=\"comment__textarea\" onChange={(e)=>{setCommentContent(e.target.value)}}></textarea>\n//                             <div className=\"buttons-wrapper\">\n//                                 <button className=\"comment__btn\" onClick={()=>{CommentEffect(CommentSubmit)}}>댓글 작성</button>\n//                             </div>\n//                         </div> */}\n//                         <div className=\"margin__top\">\n//                             <div></div>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </div>\n//             <aside className=\"pDRpRs\">\n//             <div className=\"eyrfCGs\">\n//               <div className=\"filter__heads\" />\n//                 <ul style={{ listStyleType: \"none\"}}>\n//                  {\n//                     filterList.map((a)=>{\n//                         return(\n//                         <li key={a.id}>\n//                             <input id={a.infomation} className=\"filters-input__checkboxs\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\n//                             <label className=\"input__labels\" htmlFor={a.infomation} onClick={()=>{ClickFilter(a.infomation)}}>\n//                               <span> {a.infomation} </span>\n//                                <span className=\"filters-input__ticks\">\n//                                 <svg \n//                                 width=\"13\"\n//                                 height=\"13\">\n//                                 <use xlinkHref=\"#check\">\n//                                 <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\n//                                 </use>\n//                                 </svg>\n//                               </span>\n//                             </label>\n//                         </li>\n//                         )\n//                     })\n//                   }\n//                 </ul>\n                \n//                </div>  \n//             </aside>\n//         </>\n//     )\n// }\n// export default Update;"]},"metadata":{},"sourceType":"module"}