{"version":3,"sources":["views/LoginPage.js","views/RegisterPage.js","Sidebar/SidebarData.js","views/Header.js","Sidebar/Profile.js","Sidebar/Tier.js","Sidebar/Point.js","Sidebar/Pointcg.js","views/Boardwrite.js","views/Premium.js","views/Partner.js","views/Premiumst.js","views/Student.js","views/Detail.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","axios","defaults","withCredentials","useStyles","makeStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","alignitems","justifycontent","position","withRouter","props","useState","username","setUserName","Password","setPassword","classes","history","useHistory","onSubmitHandler","e","a","preventDefault","data","password","fetch","method","headers","body","JSON","stringify","then","res","json","user","token","userHasAuthenticated","push","setModal","console","log","alert","catch","error","Container","component","maxWidth","className","Avatar","onSubmit","Grid","container","item","xs","sm","TextField","id","required","fullWidth","label","autoFocus","value","onChange","currentTarget","type","Button","justify","Box","mt","email","setEmail","first_name","setName","ConfirmPasword","setConfirmPasword","phonenum","setPhone","FormControlLabel","control","Checkbox","SidebarDate","title","path","icon","cName","Header","sidebar","setSidebar","showSidebar","userprofile","setUserprofile","userPhoto","setUserPhoto","currentUser_pk","setCurrentUser_pk","useEffect","Authorization","localStorage","getItem","userData","photo","user_id","modal","undefined","to","onClick","src","alt","map","index","removeItem","window","location","reload","formControl","minWidth","maxHeight","bottom","Profile","sendData","React","open","setOpen","ModifyModal","setModifymodal","userId","setUserId","userNickname","setUserNickname","userPoint","setUserPoint","userGrade","setUserGrade","userIntro","setUserIntro","userTier","setUserTier","userUsername_info","setUserName_info","userEmail_info","setUserEmail_info","userNumber","setUserNumber","userName","nickname","point","grade","myIntro","Tier","username_info","email_info","name","number","handleSubmit","form_data","FormData","append","response","htmlFor","accept","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","fileField","document","querySelector","handleImageSubmit","go","maxlength","placeholder","FormControl","InputLabel","Select","labelId","onClose","onOpen","event","MenuItem","confirm","handleLogout","handleEffect","root","size","startIcon","Fab","aria-label","extendedIcon","Point","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","justifyContent","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","tiers","price","description","buttonText","buttonVariant","subheader","Pointcg","Fragment","gutterBottom","tier","md","Card","CardHeader","titleTypographyProps","subheaderTypographyProps","action","CardContent","line","CardActions","titleStyle","Boardwrite","infomation","filterList","InfomationfilterList","setInfomationFilterList","Today","date","getMonth","getDate","setTitle","content","setContent","setUser_id","usergrade","urls","setUrls","like","profileImage","Form","Control","style","editor","getData","options","lang","height","dialogsInBody","onImageUpload","images","insertImage","i","length","listStyleType","data-type","Num","List","splice","indexOf","ClickFilter","xlinkHref","viewBox","xmlns","d","Premium","language","languagefilterList","setLanguageilterList","todolist","setTodoList","pgN","split","posts","slice","reverse","boardFilterArticle","Y","pub_date","M","D","list","contents","match","c","L","fill","Partner","Premiumst","user_pk","Student","Detail","detailList","setDetailList","detailUserInfo","setDetailUserInfo","detailDate","setDetailDate","detailLang","setDetailLang","detailLikedUser","setDetailLikedUser","svgColor","setSvgColor","currnetUser","setCurrentUser","likedUser","info","ClickLikeBtn","updateCount","arr","plusUser","join","minusUser","image","dangerouslySetInnerHTML","__html","myInfo","App","setUser","isAuthenticated","setisAuthenticated","authenticated","setItem","exact","Sidebarmenu","Boolean","hostname","baseURL","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f64f7708.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import { useDispatch } from \"react-redux\";\r\n// import { loginUser } from \"../_action/userAction\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n\r\n// appChange = (e) => {\r\n//   this.setState({\r\n//     id: e.target.value\r\n//   });\r\n// }\r\n\r\n\r\n// const { appChange, appClick } = this;\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        LoLtopia\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n }\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n  \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '400px', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    display: 'flex',\r\n    alignitems: 'center',\r\n    justifycontent: 'center',\r\n    position: 'relative',\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n }));\r\n\r\n\r\nfunction LoginPage(props) {\r\n  // const dispatch = useDispatch();\r\n  const [username, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    //로그인을 진행하기위해서\r\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\r\n    const data = {\r\n      username: username,\r\n      password: Password,\r\n    };\r\n    await fetch('http://39.118.174.168:8000/api/login/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if (json.user && json.user.username && json.token) {\r\n        props.userHasAuthenticated(\r\n          true, \r\n          json.user.username,\r\n          json.token);\r\n        history.push('/profile');\r\n        props.setModal(true);\r\n        console.log(json);\r\n      \r\n      } else {\r\n        alert(\"아이디 또는 비밀번호를 확인해주세요.\")\r\n      }\r\n    }).catch(error => alert(error));\r\n  };\r\n\r\n\r\n  return (\r\n    // <div\r\n    //   style={{\r\n    //     display: \"flex\",\r\n    //     justifyContent: \"center\",\r\n    //     alignItems: \"center\",\r\n    //     width: \"100%\",\r\n    //     height: \"100%\",\r\n    //   }}>\r\n    //   <form\r\n    //     onSubmit={onSubmitHandler} method=\"POST\"\r\n    //     style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n    //     <label>ID</label>\r\n    //     <input type=\"username\" value={username} onChange={onUserNameHandler} />\r\n    //     <label>Password</label>\r\n    //     <input type=\"password\" value={Password} onChange={onPasswordHanlder} />\r\n    //     <br />\r\n    //     <button type=\"submit\">Login</button>\r\n    //   </form>\r\n    // </div>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        \r\n        <Typography component=\"h1\"  variant=\"h5\">\r\n        로그인\r\n        </Typography>\r\n\r\n\r\n      <form onSubmit={onSubmitHandler}>\r\n      <Grid container spacing={2}>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"id\"\r\n                required\r\n                fullWidth\r\n                label=\"아이디\"\r\n                autoFocus\r\n                value={username}\r\n                onChange={onUserNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"비밀번호(8자 이상)\"\r\n                autoFocus\r\n                value={Password} \r\n                onChange={onPasswordHanlder}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              </Grid>\r\n              </Grid>\r\n        \r\n        <Button type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                \r\n                >로그인</Button>\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                     <Link href=\"/register\" variant=\"body2\">\r\n                      아이디가 없으시다면 회원가입 하세요 \r\n                      </Link>\r\n                  </Grid>\r\n                </Grid>\r\n      </form>\r\n    </div>\r\n    <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      </Container>\r\n  );\r\n  \r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        LoLtopia\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '400px', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    display: 'flex',\r\n    alignitems: 'center',\r\n    justifycontent: 'center',\r\n    position: 'relative',\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction RegisterPage(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [first_name, setName] = useState(\"\");\r\n  const [ConfirmPasword, setConfirmPasword] = useState(\"\");\r\n  const [phonenum, setPhone] = useState(\"010\");\r\n  const [username, setUserName] = useState(\"\");\r\n\r\n\r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onConfirmPasswordHandler = (e) => {\r\n    setConfirmPasword(e.currentTarget.value);\r\n  };\r\n  \r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n\r\n  const onPhonenumHandler = (e) => {\r\n    setPhone(e.currentTarget.value);\r\n  };\r\n\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === ConfirmPasword) {\r\n        const body = {\r\n            username: username,\r\n            password : password,\r\n            first_name : first_name,\r\n            phonenum : phonenum,\r\n            email : email,\r\n        };\r\n    fetch('http://39.118.174.168:8000/api/register/', {\r\n      method: 'POST',\r\n      headers:{\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body : JSON.stringify(body)\r\n    }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.username && json.token) {\r\n        alert(\"가입이 정상적으로 완료되었습니다.\");\r\n        props.userHasAuthenticated(true, json.username, json.token);\r\n        props.history.push(\"/login\");\r\n        props.setModal(true);\r\n      }else{\r\n        alert(\"사용불가능한 아이디입니다.\")\r\n      }\r\n    }).catch(error => alert(error));\r\n    } else{\r\n        alert(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        \r\n        <Typography \r\n        component=\"h1\" \r\n        variant=\"h5\"\r\n        >\r\n        무료 회원가입\r\n        </Typography>\r\n\r\n\r\n      <form onSubmit={onSubmitHandler}>\r\n      <Grid container spacing={2}>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"아이디\"\r\n                autoFocus\r\n                value={username}\r\n                onChange={onUserNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"비밀번호(8자 이상)\"\r\n                autoFocus\r\n                value={password} \r\n                onChange={onPasswordHanlder}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                type=\"password\"\r\n                fullWidth\r\n                label=\"비밀번호 확인\"\r\n                autoFocus\r\n                value={ConfirmPasword} \r\n                onChange={onConfirmPasswordHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"전화번호\"\r\n                autoFocus\r\n                value={phonenum} \r\n                onChange={onPhonenumHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"이름\"\r\n                autoFocus\r\n                value={first_name} \r\n                onChange={onNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"이메일\"\r\n                autoFocus\r\n                value={email} \r\n                onChange={onEmailHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"\" color=\"primary\" />}\r\n                label=\"이용약관의 동의하십니까?\"\r\n                \r\n              />\r\n              </Grid>\r\n              </Grid>\r\n        \r\n        <Button type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                >회원 가입</Button>\r\n\r\n\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                     <Link href=\"/login\" variant=\"body2\">\r\n                      이미 회원이시라면 로그인 하세요! \r\n                      </Link>\r\n                  </Grid>\r\n                </Grid>\r\n      </form>\r\n    </div>\r\n    <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n\r\n","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as GrIcons from 'react-icons/gr';\r\n\r\nexport const SidebarDate = [\r\n    // {\r\n    //     title: '닉네임',\r\n    //     path: '/',\r\n    //     icon: <FaIcons.FaUserCircle />,\r\n    //     cName: 'nav-text'\r\n    // },\r\n    {\r\n        title: '내정보',\r\n        path: '/Profile',\r\n        icon: <FaIcons.FaUserCog />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '메세지',\r\n        path: '/products',\r\n        icon: <FaIcons.FaRegComments />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '포인트',\r\n        path: '/Point',\r\n        icon: <GrIcons.GrMoney />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '게임 기록',\r\n        path: '/messages',\r\n        icon: <FaIcons.FaEnvelopeOpenText />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport { SidebarDate } from '../Sidebar/SidebarData';\r\nimport './Header.css';\r\nimport '../Sidebar/Sidebar.css';\r\n\r\n\r\nfunction Header(props){\r\n    const [sidebar,setSidebar] = useState(false);\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    const history = useHistory();\r\n    let [userprofile, setUserprofile] = useState(false);\r\n    let [userPhoto, setUserPhoto] = useState();\r\n    let [currentUser_pk, setCurrentUser_pk] = useState();\r\n\r\n    const onClickHandler = () => {\r\n    //useDispatch를 사용해서 로그아웃 액션을 실행한다\r\n    //useDispatch와 logout 액션이 두가지 필요하다\\\r\n    localStorage.removeItem('token');\r\n    history.push('/');\r\n    window.location.reload();\r\n  }\r\n\r\n  // setTimeout(() => console.log(\"start\"), 10000);\r\n  // if(props.modal === true){\r\n  //     console.log(\"reload\");\r\n  //     window.location.reload();\r\n  // } else {}\r\n\r\n  useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/api/current_user/', {\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n        }\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n        if (json.id) {\r\n            console.log(json.id)\r\n        //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n        }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n        method : 'PATCH',\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n        },\r\n        })\r\n        .then((res)=>res.json())\r\n        .then((userData)=> {\r\n            setUserPhoto(userData.photo)\r\n            setCurrentUser_pk(userData.user_id)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          });\r\n    }).catch(error => {\r\n        console.log(error)\r\n    });\r\n    },[userPhoto])\r\n\r\n\r\n    \r\n\r\n    return(\r\n    <>\r\n        <div className=\"header\">\r\n        <div className=\"header-nav\">\r\n        <div className=\"header-nav-links\">  \r\n            {\r\n              props.modal === false || props.modal === null || props.modal === undefined\r\n              ? (\r\n              <>\r\n              <Link to=\"/login\"><button className=\"header-btns\">로그인</button></Link>\r\n              <Link to=\"/register\"><button className=\"header-btns\">회원가입</button></Link>\r\n              </>\r\n              )\r\n              : (\r\n                <>\r\n                 <Link  to=\"/boardwtite\"><button className=\"header-dashboards\">New write</button></Link>\r\n                    <div className=\"user-container\" onClick={()=>{setUserprofile(!userprofile)}}>\r\n                    <img src={userPhoto} className=\"user-image\" onClick={showSidebar} alt=\"/\"></img>\r\n                    </div>\r\n                      <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                        <ul className='nav-menu-items' onClick={showSidebar}>\r\n                          <li className=\"navbar-toggle\">\r\n                            <Link to='#' className='menu-bars' />   \r\n                          </li>\r\n                    {SidebarDate.map((item, index) => {\r\n                       return (\r\n                        <>\r\n                          <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                              {item.icon}\r\n                              <span>\r\n                                {item.title}\r\n                              </span>\r\n                              \r\n                            </Link>\r\n                          </li>\r\n                          \r\n                        </>\r\n                       )\r\n                    })}\r\n                    \r\n                     \r\n                  <button className=\"logout\" onClick={onClickHandler}>로그 아웃</button>\r\n                 \r\n                      \r\n                   \r\n                        </ul>\r\n                        </nav>\r\n                {\r\n                  userprofile && currentUser_pk === true\r\n                  ?(\r\n                   <>\r\n                   </>\r\n                  )\r\n                  :null\r\n                }\r\n                </>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Profile.css'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      minWidth: 200,\r\n      maxHeight: 0,\r\n    //   marginBottom : 10,\r\n      position : 'relative',\r\n      bottom : 22,\r\n    },\r\n  }));\r\n\r\n// 모달쓰기위한 \r\nfunction Profile(props){\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleChange = (event) => {\r\n        setUserTier(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n    const history = useHistory()\r\n    let [ModifyModal, setModifymodal] = useState(false)\r\n    // let [tierModal, setTier] = useState()\r\n    // let [tier] = useState(false) 티어\r\n    // let [username_info] = useState(false) 아이디\r\n    // let [email_info] = useState(false) 이메일 \r\n    // let [number] = useState(false) 번호\r\n    // let [name] = useState(false) 이름\r\n    \r\n//profile[테이블에서 정보 받아옴]\r\n    let [userId, setUserId] = useState()\r\n    let [userPhoto, setUserPhoto] = useState()\r\n    let [userNickname, setUserNickname] = useState(\"\")\r\n    let [userPoint, setUserPoint] = useState()\r\n    let [userGrade,  setUserGrade] = useState()\r\n    let [userIntro, setUserIntro] = useState()\r\n    let [userTier, setUserTier] = useState()\r\n    let [userUsername_info, setUserName_info] = useState()\r\n    let [userEmail_info, setUserEmail_info] = useState()\r\n    let [userNumber, setUserNumber] = useState()\r\n    let [userName, setUserName] = useState()\r\n\r\n    useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/api/current_user/', {\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n          if (json.id) {\r\n            setUserId(json.id)\r\n            //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n        }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n                method : 'PATCH',\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                },\r\n            })\r\n            .then((res)=>res.json())\r\n            // 데이터베이스에서 가져오는 정확한 명\r\n            .then((userData)=> {\r\n                setUserPhoto(userData.photo) ;\r\n                setUserNickname(userData.nickname);\r\n                setUserPoint(userData.point);\r\n                setUserGrade(userData.grade);\r\n                setUserIntro(userData.myIntro);\r\n                setUserTier(userData.Tier);\r\n                setUserName_info(userData.username_info);\r\n                setUserEmail_info(userData.email_info);\r\n                setUserName(userData.name);\r\n                setUserNumber(userData.number);\r\n            })\r\n            \r\n            .catch(error => {\r\n                console.log(error);\r\n              });;\r\n        }).catch(error => {\r\n            console.log(error)\r\n          });\r\n          \r\n    }\r\n    \r\n    ,[userId]) \r\n\r\n    let sendData;\r\n    const handleEffect = (handleSubmit) => {\r\n        sendData = {\r\n            point : userPoint,\r\n            nickname : userNickname,\r\n            grade : userGrade,\r\n            myIntro : userIntro,\r\n            username_info : userUsername_info,\r\n            email_info : userEmail_info,\r\n            name : userName,\r\n            number : userNumber,\r\n            Tier : userTier,\r\n            photo : userPhoto\r\n        }\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        let form_data = new FormData();\r\n        form_data.append('point', sendData.point);\r\n        form_data.append('nickname', sendData.nickname);\r\n        form_data.append('grade', sendData.grade);\r\n        form_data.append('myIntro', sendData.myIntro);\r\n        form_data.append('Tier', sendData.Tier);\r\n        fetch('http://39.118.174.168:8000/api/profile/' + userId + '/update/', {\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => {alert('프로필 정보 변경의 성공하셨습니다', response)})\r\n    };\r\n\r\n    const handleImageSubmit = () => {\r\n        let form_data = new FormData();\r\n        let fileField = document.querySelector('input[type=\"file\"]');\r\n        form_data.append('photo', fileField.files[0]);\r\n        fetch('http://39.118.174.168:8000/api/profile/' + userId + '/update/', {\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .then(response => {alert('이미지 저장의 성공하셨습니다', response)})\r\n    };\r\n\r\n    const DeleteUser = ()=>{\r\n        if(window.confirm('정말 삭제하시겠습니까 ?')===true){\r\n            fetch('http://39.118.174.168:8000/api/current_user/', {\r\n                headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/delete/',{\r\n                    method : 'DELETE',\r\n                    headers: {\r\n                        Authorization: `Token ${localStorage.getItem('token')}`,\r\n                    },\r\n                })\r\n                .then((res)=>res.json())\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    });;\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n            props.handleLogout()\r\n            history.push('/login')\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <main className=\"profile-main\">\r\n                <section className=\"section1\">\r\n                    <div className=\"thumbnail__\">\r\n                        <img src={userPhoto} alt=\"\"></img>\r\n                        <label htmlFor=\"file\" className=\"img-up\">\r\n                            <input type=\"file\" id=\"file\" accept=\".jpg, .png, .jpeg, .gif\" onChange={(e)=>{\r\n                                e.preventDefault();\r\n                                let reader = new FileReader();\r\n                                let file = e.target.files[0];\r\n                                reader.onloadend = () => {\r\n                                setUserPhoto(reader.result)\r\n                                }\r\n                                reader.readAsDataURL(file);\r\n                            }}></input>\r\n                        이미지 업로드</label>\r\n                        <button className=\"img-de\" onClick={()=>{\r\n                            handleImageSubmit()\r\n                            setModifymodal(false)\r\n                            history.go(0)\r\n                        }}>저장</button>\r\n                    </div>\r\n\r\n                    <div className=\"profile-info\">\r\n                        {\r\n                            ModifyModal === true\r\n                            ?(\r\n                                <form>\r\n                                    <input maxlength=\"50\"value={userIntro} placeholder={userIntro} onChange={(e)=>{\r\n                                        setUserIntro(e.target.value)\r\n                                    }}></input>\r\n                                </form>\r\n                            )\r\n                            :(\r\n                                <>\r\n                                <h2>{userIntro}</h2>\r\n                                <button className=\"fix-buttons\" onClick={()=>{\r\n                                    setModifymodal(true)\r\n                                }}>자기소개 수정</button>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </section>\r\n                             \r\n                <section className=\"section2\">  \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>닉네임</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                {\r\n                                    ModifyModal === true\r\n                                    ?null\r\n                                    :<div className=\"contents\">{userNickname}</div>\r\n                                }\r\n                                    \r\n                                {\r\n                                    ModifyModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={userNickname} onChange={(e)=>{\r\n                                                setUserNickname(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\" onClick={()=>{setModifymodal(true)}}>수정</button>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                                \r\n                                \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>point</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userPoint}</div>\r\n                                {\r\n                                        <>\r\n                                        <Link to=\"pointcg\">\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\">충전하기</button>\r\n                                        </div>\r\n                                        </Link>\r\n                                        \r\n                                        <Link to=\"point\">\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\">환전하기</button>\r\n                                        </div>\r\n                                        </Link>\r\n                                        </>\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>티어</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                {\r\n                                    <div>\r\n                                    <FormControl className={classes.formControl}>\r\n                                    {  \r\n                                    (userTier === undefined) || (userTier === null) || (userTier === \"\")\r\n                                    ? (<InputLabel id=\"demo-controlled-open-select-label\">티어를 선택하세요</InputLabel>)\r\n                                    : (<InputLabel id=\"demo-controlled-open-select-label\">{userTier}</InputLabel>) \r\n                                    }\r\n                                    <Select\r\n                                    labelId=\"demo-controlled-open-select-label\"\r\n                                    id=\"demo-controlled-open-select\"\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    onOpen={handleOpen}\r\n                                    value={userTier}\r\n                                    onChange={handleChange}>\r\n                                    <MenuItem value={\"챌린저\"}>챌린저</MenuItem>\r\n                                    <MenuItem value={\"그랜드마스터\"}>그랜드마스터</MenuItem>\r\n                                    <MenuItem value={\"마스터\"}>마스터</MenuItem>\r\n                                    <MenuItem value={\"다이아몬드\"}>다이아몬드</MenuItem>\r\n                                    <MenuItem value={\"플레티넘\"}>플레티넘</MenuItem>\r\n                                    <MenuItem value={\"골드\"}>골드</MenuItem>\r\n                                    <MenuItem value={\"실버\"}>실버</MenuItem>\r\n                                    <MenuItem value={\"브론즈\"}>브론즈</MenuItem>\r\n                                    <MenuItem value={\"아이언\"}>아이언</MenuItem>\r\n                                    </Select>\r\n                                    </FormControl>\r\n                                    </div>\r\n                                }\r\n\r\n                                    {/* {\r\n                                    tierModal === {userTier}\r\n                                    ?(  <form className=\"nickname-form\">\r\n                                    <input className=\"nickname-input\" placeholder={{userTier}} onChange={(e)=>{\r\n                                        setUserTier(e.target.value)\r\n                                    }}></input>\r\n                                     <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\" onClick={()=>{setUserTier(true)}}>수정</button>\r\n                                        </div>\r\n                                    \r\n                                        </form>\r\n                                    )\r\n                                    :(\r\n                                        <div className=\"contents\">{userTier}</div> \r\n                                    )\r\n                                    } */}\r\n                                \r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>등급</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                        {\r\n                                              userGrade === 0 ? <div className=\"contents\"></div> \r\n                                            : userGrade === 1 ? <div className=\"contents\">프리미엄 파트너</div>\r\n                                            : userGrade === 2 ? <div className=\"contents\">일반 파트너</div>\r\n                                            : userGrade === 3 ? <div className=\"contents\">프리미엄 수강생</div>\r\n                                            : userGrade === 4 ? <div className=\"contents\">일반 수강생</div>\r\n                                            :null\r\n                                        }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>아이디</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userUsername_info}</div>  \r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>이메일</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userEmail_info}</div>  \r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>이름</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userName}</div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>전화번호</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                <div className=\"contents\">{userNumber}</div>\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                <div className=\"contents\">\r\n                                    <button className=\"out-button\" onClick={DeleteUser}>회원탈퇴</button>\r\n                                    <button className=\"save-button\" onClick={()=>{\r\n                                        handleEffect(handleSubmit)\r\n                                        setModifymodal(false)\r\n                                    }}>저장</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport { Button } from '@material-ui/core';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Tier() {\r\n  const classes = useStyles();\r\n  return (\r\n      \r\n        <div className=\"here\">\r\n            <div className=\"here_left\">\r\n      <h1>포인트</h1>\r\n      <br />\r\n        <h3>보유 포인트 : <Button variant=\"outlined\"\r\n                                 color=\"primary\"\r\n                                 size=\"small\"\r\n                                 className={classes.margin}>\r\n         0 : 포인트\r\n        </Button>\r\n\r\n            <Button variant=\"outlined\"\r\n                    size=\"small\"\r\n                    startIcon={<MonetizationOnIcon />}\r\n                    href=\"/Pointcg\"\r\n                    >\r\n                      충전하기\r\n                  </Button></h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>환전 신청</h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"금액을 입력하세요\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"예금주\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <TextField id=\"outlined-basic\" label=\"계좌번호(-제외)\" variant=\"outlined\"\r\n        size=\"small\" />\r\n        \r\n        <div className=\"check\">\r\n        <Fab \r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n        >\r\n          \r\n          <CheckIcon className={classes.extendedIcon} />\r\n          환전하기\r\n          \r\n        </Fab>\r\n        </div>\r\n      </div>\r\n      <div className=\"here_right\">\r\n     \r\n\r\n      </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\nexport default Tier;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Point() {\r\n  let [userPoint, setUserPoint] = useState()\r\n  let [userId, setUserId] = useState()\r\n\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    fetch('http://39.118.174.168:8000/api/current_user/', {\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n      if (json.id) {\r\n        setUserId(json.id)\r\n        //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n        })\r\n        .then((res)=>res.json())\r\n        // 데이터베이스에서 가져오는 정확한 명\r\n        .then((userData)=> {\r\n         \r\n            setUserPoint(userData.point)\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          });;\r\n    }).catch(error => {\r\n        console.log(error)\r\n      });\r\n},[userId])\r\n\r\n\r\n  return (\r\n      \r\n        <div className=\"here\">\r\n            <div className=\"here_left\">\r\n      <h1>포인트</h1>\r\n      <br />\r\n        <h3>보유 포인트 : {userPoint}P　\r\n\r\n            <Button variant=\"outlined\"\r\n                    size=\"small\"\r\n                    startIcon={<MonetizationOnIcon />}\r\n                    href=\"/pointcg\"\r\n                    >\r\n                      충전하기\r\n                  </Button></h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>환전 신청</h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"금액을 입력하세요\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"예금주\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <TextField id=\"outlined-basic\" label=\"계좌번호(-제외)\" variant=\"outlined\"\r\n        size=\"small\" />\r\n        \r\n        <div className=\"check\">\r\n        <Fab \r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n        >\r\n          \r\n          <CheckIcon className={classes.extendedIcon} />\r\n          환전하기\r\n          \r\n        </Fab>\r\n        </div>\r\n      </div>\r\n      <div className=\"here_right\">\r\n     \r\n\r\n      </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\nexport default Point;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StarIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\nconst tiers = [\r\n  {\r\n    title: '프리미엄',\r\n    price: '29900',\r\n    description: [\r\n      '1day', \r\n      // '2 GB of storage',\r\n      // 'Help center access',\r\n      // 'Email support'\r\n    ],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'outlined',\r\n  },\r\n  {\r\n    title: '슈퍼울트라 프리미엄',\r\n    subheader: 'Most popular',\r\n    price: '119900',\r\n    description: [\r\n      '7day',\r\n      // '10 GB of storage',\r\n      // 'Help center access',\r\n      // 'Priority email support',\r\n    ],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'contained',\r\n  },\r\n  {\r\n    title: '슈퍼 프리미엄',\r\n    price: '59000',\r\n    description: [\r\n      '3day',\r\n      // '30 GB of storage',\r\n      // 'Help center access',\r\n      // 'Phone & email support',\r\n    ],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'outlined',\r\n  },\r\n];\r\n\r\nexport default function Pointcg() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n     \r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          무제한 이용권\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          당신이 원하는 일수만큼 마음대로 고티어 파트너와 제한없이 게임을 즐길 수 있습니다\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n          {tiers.map((tier) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  action={tier.title === 'Pro' ? <StarIcon /> : null}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      {tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /won\r\n                    </Typography>\r\n                  </div>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\">\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n   \r\n    </React.Fragment>\r\n  );\r\n}","import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router'\r\n// import CKEditor from 'ckeditor4-react-advanced';\r\nimport {Form} from \"react-bootstrap\";\r\nimport '../views/Boardwrite.css';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ReactSummernote from \"react-summernote\";\r\nimport \"react-summernote/dist/react-summernote.css\";\r\nimport \"react-summernote/lang/summernote-ko-KR\";\r\nimport \"bootstrap/js/modal\";\r\nimport \"bootstrap/js/dropdown\";\r\nimport \"bootstrap/js/tooltip\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\n\r\n  const titleStyle = {\r\n     marginBottom: 9,\r\n     width: 762,\r\n\r\n   };\r\n\r\n   \r\nfunction Boardwrite() {\r\n\r\n\r\n  let [filterList] = useState([{id : 1, infomation: '챌린저'}, {id : 2, infomation : '그랜드마스터'},\r\n    {id : 3, infomation : '마스터'}, {id : 4, infomation :'다이아몬드'}, {id : 5, infomation:'플레티넘'},\r\n    {id : 6, infomation:'골드'}, {id : 7, infomation:'실버'}, {id : 8, infomation:'브론즈'}, {id : 9, infomation:'아이언'}])\r\n    let [InfomationfilterList, setInfomationFilterList] = useState(\"\")\r\n    \r\n    let Today = new Date();\r\n    let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate()\r\n    \r\n\r\n    const history = useHistory()\r\n    let [title , setTitle] = useState(\"\")\r\n    let [content , setContent] = useState(\"내용을 입력하세요.\")\r\n    let [userPhoto, setUserPhoto] = useState()\r\n    let [user_id, setUser_id] = useState()\r\n    let [userNickname, setUserNickname] = useState()\r\n    let [usergrade, setUserGrade] = useState()\r\n    let sendData;\r\n    let [urls, setUrls] = useState()\r\n    const handleEffect = (handleSubmit) => {\r\n        if(InfomationfilterList === \"\" || InfomationfilterList.length === 0){\r\n            alert(\"한 개 이상의 언어를 선택해주세요.\")\r\n            return;\r\n        }\r\n        sendData = {\r\n            title : title,\r\n            content : content,\r\n            date : date,\r\n            like : 0,\r\n            nickname : userNickname,\r\n            infomation : InfomationfilterList,\r\n            profileImage : userPhoto,\r\n            user_id : user_id,\r\n            grade : usergrade\r\n        }\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        let form_data = new FormData();\r\n        form_data.append('category', sendData.grade);\r\n        form_data.append('title', sendData.title);\r\n        form_data.append('contents', sendData.content);\r\n        form_data.append('pub_date', sendData.date);\r\n        form_data.append('infomation', sendData.infomation);\r\n        form_data.append('like', sendData.like);\r\n        form_data.append('nickname', sendData.nickname);\r\n        form_data.append('profileImage', sendData.profileImage)\r\n        form_data.append('user_id', sendData.user_id);\r\n        \r\n        fetch(\"http://39.118.174.168:8000/board/\"+urls, {\r\n            method : 'POST',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => console.log('Success:', JSON.stringify(response)))\r\n        // .then(history.push(\"urls/\"))\r\n        window.location.href =\"/\" + urls\r\n        // .then(history.go(0));\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/api/current_user/', {\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.id === null || json.id === undefined) {\r\n            alert(\"로그인이 필요합니다.\")\r\n            window.location.href = \"/login\"\r\n        }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n                method : 'PATCH',\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                },\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((userData)=> {\r\n                setUserPhoto(userData.photo);\r\n                setUser_id(userData.user_id);\r\n                setUserNickname(userData.nickname);\r\n                setUserGrade(userData.grade);\r\n                if(userData.grade===4){\r\n                  setUserGrade(\"일반 수강생\");\r\n                  setUrls(\"student/\");\r\n                } else if(userData.grade===3){\r\n                  setUserGrade(\"프리미엄 수강생\");\r\n                  setUrls(\"premiumst/\");\r\n                } else if(userData.grade===2){\r\n                  setUserGrade(\"일반 파트너\");\r\n                  setUrls(\"partner/\");\r\n                } else if(userData.grade===1){\r\n                  setUserGrade(\"프리미엄 파트너\");\r\n                  setUrls(\"premium/\");\r\n                } else{\r\n                  history.push('/profile');\r\n                  alert(\"티어인증이 필요합니다\");\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n              });\r\n        }).catch(error => {\r\n            console.log(error)\r\n          });\r\n    },[history])\r\n\r\n    const ClickFilter = (lang)=>{\r\n      let Num = 0;\r\n      let List = [...InfomationfilterList]\r\n      \r\n      List.map((a)=>{\r\n          if(a === lang){\r\n              Num = 1;\r\n          }\r\n          return Num;\r\n      })\r\n      if (Num === 0) {\r\n          List.push(lang)\r\n      }else{\r\n          List.splice(List.indexOf(lang),1)\r\n      }\r\n      setInfomationFilterList(List)\r\n  }\r\n  const handleChange = (event) => {\r\n    console.log(event.editor.getData())\r\n    setContent(event.editor.getData())\r\n    // setContent(event.target.value);\r\n  };\r\n\r\n  function onImageUpload (images, insertImage) {\r\n    for (let i = 0; i < images.length; i++) {\r\n      const reader = new FileReader();\r\n\r\n      reader.onloadend = () => {\r\n        insertImage(reader.result);\r\n      };\r\n\r\n      reader.readAsDataURL(images[i]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n            <div className=\"container-section\">\r\n              <h2>글작성</h2>\r\n              <div>\r\n              <FormControl className=\"MenuItem\"\r\n                           >\r\n              <MenuItem>게시판 = {usergrade}</MenuItem>\r\n              </FormControl>\r\n              <br />\r\n              <Form.Control\r\n                 type = \"text\"\r\n                 style = {titleStyle}\r\n                 placeholder =\"제목을 입력하세요\"\r\n                 onChange = {(e)=>{setTitle(e.target.value)}}/>\r\n                \r\n              </div>\r\n                <ReactSummernote \r\n                 value = {content}\r\n                 onChange = {handleChange}\r\n                 options={{\r\n                  lang: \"ko-KR\",\r\n                  height: 380,\r\n                  dialogsInBody: true,\r\n                  toolbar: [\r\n                    [\"style\", [\"style\"]],\r\n                    [\"font\", [\"bold\", \"underline\", \"clear\"]],\r\n                    [\"fontname\", [\"fontname\"]],\r\n                    [\"para\", [\"ul\", \"ol\", \"paragraph\"]],\r\n                    [\"table\", [\"table\"]],\r\n                    [\"insert\", [\"link\", \"picture\", \"video\"]],\r\n                    [\"view\", [\"fullscreen\", \"codeview\"]]\r\n                  ]\r\n                }}\r\n                onImageUpload= {onImageUpload()}\r\n                 />\r\n\r\n                <button className=\"upButton\"\r\n                  onClick={()=>{\r\n                    handleEffect(handleSubmit) \r\n                  }}>\r\n\r\n                출간하기</button>\r\n            </div>\r\n                        \r\n\r\n          <aside className=\"pDRpRs\">\r\n            <div className=\"eyrfCGs\">\r\n              <div className=\"filter__heads\" />\r\n                <ul style={{ listStyleType: \"none\"}}>\r\n                 {\r\n                    filterList.map((a)=>{\r\n                        return(\r\n                        <li key={a.id}>\r\n                            <input id={a.infomation} className=\"filters-input__checkboxs\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\r\n                            <label className=\"input__labels\" htmlFor={a.infomation} onClick={()=>{ClickFilter(a.infomation)}}>\r\n                              <span> {a.infomation} </span>\r\n                               <span className=\"filters-input__ticks\">\r\n                                <svg \r\n                                width=\"13\"\r\n                                height=\"13\">\r\n                                <use xlinkHref=\"#check\">\r\n                                <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\r\n                                </use>\r\n                                </svg>\r\n                              </span>\r\n                            </label>\r\n                        </li>\r\n                        )\r\n                    })\r\n                  }\r\n                </ul>\r\n                \r\n               </div>  \r\n            </aside>\r\n                    \r\n    </>\r\n  )\r\n}\r\nexport default Boardwrite;","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../views/Primium.css';\r\n\r\nfunction Premium(){\r\n    let [filterList] = useState([{id : 1, language: '챌린저'}, {id : 2, language : '그랜드마스터'},\r\n    {id : 3, language : '마스터'}, {id : 4, language :'다이아몬드'}, {id : 5, language:'플레티넘'},\r\n    {id : 6, language:'골드'}, {id : 7, language:'실버'}, {id : 8, language:'브론즈'}, {id :9, language:'아이언'}])\r\n    let [languagefilterList, setLanguageilterList] = useState(\"\");\r\n    let [todolist, setTodoList] = useState([]);\r\n    let pgN = document.location.href.split('/')[3]\r\n    // let [nickname, setUserNickname] = useState()\r\n    // let [userId, setUserId] = useState()\r\n\r\n    useEffect(()=>{\r\n        pgN === \"like\"\r\n        ?(\r\n            fetch('http://39.118.174.168:8000/board/premium/like/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                setTodoList(posts);\r\n            })\r\n        )\r\n        :(\r\n            fetch('http://39.118.174.168:8000/board/premium/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                \r\n                setTodoList(posts)\r\n            })\r\n        )\r\n    },[pgN])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     fetch('http://39.118.174.168:8000/api/current_user/', {\r\n    //       headers: {\r\n    //         Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //       }\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(json => {\r\n    //       // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n    //       if (json.id) {\r\n    //         setUserId(json.id)\r\n    //         //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    //     }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n    //             method : 'PATCH',\r\n    //             headers: {\r\n    //                 Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //             },\r\n    //         })\r\n    //         .then((res)=>res.json())\r\n    //         // 데이터베이스에서 가져오는 정확한 명\r\n    //         .then((userData)=> {\r\n             \r\n    //             setUserNickname(userData.nickname)\r\n                \r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //           });;\r\n    //     }).catch(error => {\r\n    //         console.log(error)\r\n    //       });\r\n    // },[userId])\r\n\r\n\r\n    const ClickFilter = (lang)=>{\r\n        let Num = 0;\r\n        let List = [...languagefilterList];\r\n\r\n        List.map((a)=>{\r\n            if (a === lang) {\r\n                Num = 1;\r\n            }\r\n            return Num;\r\n        })\r\n\r\n        if (Num === 0) {\r\n            List.push(lang)\r\n        }else{\r\n            List.splice(List.indexOf(lang),1)\r\n        }\r\n        setLanguageilterList(List)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"trend-section\">\r\n            <main className=\"trend-main\">\r\n                <div className=\"main-section\">\r\n                        {\r\n                            todolist.slice(0).reverse().map((a)=>{\r\n                                let Y = a.pub_date.split('-')[0]\r\n                                let M = a.pub_date.split('-')[1]\r\n                                let D = a.pub_date.split('-')[2].split('T')[0]\r\n                                let boardFilterArticle;\r\n                                let Num;\r\n                                let list =  a.infomation.split(',')\r\n                                let path = a.contents.match('(src=\"([^>]+)\")');\r\n                                if(languagefilterList.length !== 0){\r\n                                    languagefilterList.map((c)=>{\r\n                                        if(list.indexOf(c) !== -1 && Num !== 0){\r\n                                            Num = 1;\r\n                                        }else{\r\n                                            Num = 0;\r\n                                            return Num;\r\n                                        }\r\n                                        return Num;\r\n                                    })\r\n                                    if(Num === 1){\r\n                                        boardFilterArticle = \r\n                                        <div className=\"article\" key={a.id}>\r\n                                            {\r\n                                                path === null\r\n                                                ? null\r\n                                                :(\r\n                                                    <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                        <div className=\"arcticle-img\">\r\n                                                            {<img src={path[2]} alt=\"\"></img>}\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                            <div className=\"article-content\">\r\n                                                <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                    <h4>{a.title}</h4>\r\n                                                    <div className=\"desc-wrapper\">\r\n                                                    \r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div className=\"sub-info\">\r\n                                                    <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                                </div>\r\n                                                <div className=\"filter-info\">\r\n                                                {\r\n                                                    list.map((L, i)=>{\r\n                                                        return(\r\n                                                            <p key={i}>#{L}</p>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"article-footer\">\r\n                                                <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                    <img src={a.profileImage} alt=\"\"></img>\r\n                                                    <span>\"by \" <b>{a.nickname}</b></span>\r\n                                                </Link>\r\n                                                <div className=\"likes\">\r\n                                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                                                    {a.like}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                }else{\r\n                                    boardFilterArticle = \r\n                                    <div className=\"article\" key={a.id}>\r\n                                        {\r\n                                            path === null\r\n                                            ? null\r\n                                            :(\r\n                                                <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                    <div className=\"arcticle-img\">\r\n                                                        {<img src={path[2]} alt=\"\"></img>}\r\n                                                    </div>\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"article-content\">\r\n                                            <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                <h4>{a.title}</h4>\r\n                                                <div className=\"desc-wrapper\">\r\n                                                \r\n                                                </div>\r\n                                            </Link>\r\n                                            <div className=\"sub-info\">\r\n                                                <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                            </div>\r\n                                            <div className=\"filter-info\">\r\n                                            {\r\n                                                list.map((L, i)=>{\r\n                                                    return(\r\n                                                        <p key={i}>#{L}</p>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"article-footer\">\r\n                                            <Link to={\"/premiumdetail/\" + a.id}>\r\n                                                <img src={a.profileImage} alt=\"\"></img>\r\n                                                <span>\"by \" <b>{a.nickname}</b></span>\r\n                                            </Link>\r\n                                            <div className=\"likes\">\r\n                                                <svg \r\n                                                width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"/></svg>\r\n                                                {a.like}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                \r\n                                return(\r\n                                    boardFilterArticle\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </main>\r\n            <aside className=\"pDRpR\">\r\n            <div className=\"eyrfCG\">\r\n                <div className=\"filter__head\">\r\n                    \r\n                </div>\r\n                <section>\r\n                <ul style={{ listStyleType: \"none\"}}>\r\n                    {\r\n                    filterList.map((a)=>{\r\n                        return(\r\n                        <li key={a.id}>\r\n                            <input id={a.language} className=\"filters-input__checkbox\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\r\n                            <label className=\"input__label\" htmlFor={a.language} onClick={()=>{ClickFilter(a.language)}}>\r\n                            <span>\r\n                                {a.language}</span>\r\n                            <span className=\"filters-input__tick\">\r\n                                <svg \r\n                                width=\"13\"\r\n                                height=\"13\">\r\n                                <use xlinkHref=\"#check\">\r\n                                    <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\r\n                                </use>\r\n                                </svg>\r\n                            </span>\r\n                            </label>\r\n                        </li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                </section>\r\n            </div>  \r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\nexport default Premium;","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../views/Primium.css';\r\n\r\nfunction Partner(){\r\n    let [filterList] = useState([{id : 1, language: '챌린저'}, {id : 2, language : '그랜드마스터'},\r\n    {id : 3, language : '마스터'}, {id : 4, language :'다이아몬드'}, {id : 5, language:'플레티넘'},\r\n    {id : 6, language:'골드'}, {id : 7, language:'실버'}, {id : 8, language:'브론즈'}, {id :9, language:'아이언'}])\r\n    let [languagefilterList, setLanguageilterList] = useState(\"\");\r\n    let [todolist, setTodoList] = useState([]);\r\n    let pgN = document.location.href.split('/')[3]\r\n    // let [nickname, setUserNickname] = useState()\r\n    // let [userId, setUserId] = useState()\r\n\r\n    useEffect(()=>{\r\n        pgN === \"like\"\r\n        ?(\r\n            fetch('http://39.118.174.168:8000/board/partner/like/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                setTodoList(posts);\r\n            })\r\n        )\r\n        :(\r\n            fetch('http://39.118.174.168:8000/board/partner/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                \r\n                setTodoList(posts)\r\n            })\r\n        )\r\n    },[pgN])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     fetch('http://39.118.174.168:8000/api/current_user/', {\r\n    //       headers: {\r\n    //         Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //       }\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(json => {\r\n    //       // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n    //       if (json.id) {\r\n    //         setUserId(json.id)\r\n    //         //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    //     }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n    //             method : 'PATCH',\r\n    //             headers: {\r\n    //                 Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //             },\r\n    //         })\r\n    //         .then((res)=>res.json())\r\n    //         // 데이터베이스에서 가져오는 정확한 명\r\n    //         .then((userData)=> {\r\n             \r\n    //             setUserNickname(userData.nickname)\r\n                \r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //           });;\r\n    //     }).catch(error => {\r\n    //         console.log(error)\r\n    //       });\r\n    // },[userId])\r\n\r\n\r\n    const ClickFilter = (lang)=>{\r\n        let Num = 0;\r\n        let List = [...languagefilterList];\r\n\r\n        List.map((a)=>{\r\n            if (a === lang) {\r\n                Num = 1;\r\n            }\r\n            return Num;\r\n        })\r\n\r\n        if (Num === 0) {\r\n            List.push(lang)\r\n        }else{\r\n            List.splice(List.indexOf(lang),1)\r\n        }\r\n        setLanguageilterList(List)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"trend-section\">\r\n            <main className=\"trend-main\">\r\n                <div className=\"main-section\">\r\n                        {\r\n                            todolist.slice(0).reverse().map((a)=>{\r\n                                let Y = a.pub_date.split('-')[0]\r\n                                let M = a.pub_date.split('-')[1]\r\n                                let D = a.pub_date.split('-')[2].split('T')[0]\r\n                                let boardFilterArticle;\r\n                                let Num;\r\n                                let list =  a.infomation.split(',')\r\n                                let path = a.contents.match('(src=\"([^>]+)\")');\r\n                                if(languagefilterList.length !== 0){\r\n                                    languagefilterList.map((c)=>{\r\n                                        if(list.indexOf(c) !== -1 && Num !== 0){\r\n                                            Num = 1;\r\n                                        }else{\r\n                                            Num = 0;\r\n                                            return Num;\r\n                                        }\r\n                                        return Num;\r\n                                    })\r\n                                    if(Num === 1){\r\n                                        boardFilterArticle = \r\n                                        <div className=\"article\" key={a.id}>\r\n                                            {\r\n                                                path === null\r\n                                                ? null\r\n                                                :(\r\n                                                    <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                        <div className=\"arcticle-img\">\r\n                                                            {<img src={path[2]} alt=\"\"></img>}\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                            <div className=\"article-content\">\r\n                                                <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                    <h4>{a.title}</h4>\r\n                                                    <div className=\"desc-wrapper\">\r\n                                                    \r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div className=\"sub-info\">\r\n                                                    <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                                </div>\r\n                                                <div className=\"filter-info\">\r\n                                                {\r\n                                                    list.map((L, i)=>{\r\n                                                        return(\r\n                                                            <p key={i}>#{L}</p>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"article-footer\">\r\n                                                <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                    <img src={a.profileImage} alt=\"\"></img>\r\n                                                    <span>\"by \" <b>{a.nickname}</b></span>\r\n                                                </Link>\r\n                                                <div className=\"likes\">\r\n                                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                                                    {a.like}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                }else{\r\n                                    boardFilterArticle = \r\n                                    <div className=\"article\" key={a.id}>\r\n                                        {\r\n                                            path === null\r\n                                            ? null\r\n                                            :(\r\n                                                <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                    <div className=\"arcticle-img\">\r\n                                                        {<img src={path[2]} alt=\"\"></img>}\r\n                                                    </div>\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"article-content\">\r\n                                            <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                <h4>{a.title}</h4>\r\n                                                <div className=\"desc-wrapper\">\r\n                                                \r\n                                                </div>\r\n                                            </Link>\r\n                                            <div className=\"sub-info\">\r\n                                                <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                            </div>\r\n                                            <div className=\"filter-info\">\r\n                                            {\r\n                                                list.map((L, i)=>{\r\n                                                    return(\r\n                                                        <p key={i}>#{L}</p>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"article-footer\">\r\n                                            <Link to={\"/partnerdetail/\" + a.id}>\r\n                                                <img src={a.profileImage} alt=\"\"></img>\r\n                                                <span>\"by \" <b>{a.nickname}</b></span>\r\n                                            </Link>\r\n                                            <div className=\"likes\">\r\n                                                <svg \r\n                                                width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"/></svg>\r\n                                                {a.like}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                \r\n                                return(\r\n                                    boardFilterArticle\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </main>\r\n            <aside className=\"pDRpR\">\r\n            <div className=\"eyrfCG\">\r\n                <div className=\"filter__head\">\r\n                    \r\n                </div>\r\n                <section>\r\n                <ul style={{ listStyleType: \"none\"}}>\r\n                    {\r\n                    filterList.map((a)=>{\r\n                        return(\r\n                        <li key={a.id}>\r\n                            <input id={a.language} className=\"filters-input__checkbox\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\r\n                            <label className=\"input__label\" htmlFor={a.language} onClick={()=>{ClickFilter(a.language)}}>\r\n                            <span>\r\n                                {a.language}</span>\r\n                            <span className=\"filters-input__tick\">\r\n                                <svg \r\n                                width=\"13\"\r\n                                height=\"13\">\r\n                                <use xlinkHref=\"#check\">\r\n                                    <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\r\n                                </use>\r\n                                </svg>\r\n                            </span>\r\n                            </label>\r\n                        </li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                </section>\r\n            </div>  \r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\nexport default Partner;","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../views/Primium.css';\r\n\r\nfunction Premiumst(){\r\n    let [filterList] = useState([{id : 1, language: '챌린저'}, {id : 2, language : '그랜드마스터'},\r\n    {id : 3, language : '마스터'}, {id : 4, language :'다이아몬드'}, {id : 5, language:'플레티넘'},\r\n    {id : 6, language:'골드'}, {id : 7, language:'실버'}, {id : 8, language:'브론즈'}, {id :9, language:'아이언'}])\r\n    let [languagefilterList, setLanguageilterList] = useState(\"\");\r\n    let [todolist, setTodoList] = useState([]);\r\n    let pgN = document.location.href.split('/')[3]\r\n    // let [userNickname, setUserNickname] = useState()\r\n    // let [userId, setUserId] = useState()\r\n\r\n    useEffect(()=>{\r\n        pgN === \"like\"\r\n        ?(\r\n            fetch('http://39.118.174.168:8000/board/premiumst/like/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                setTodoList(posts);\r\n            })\r\n        )\r\n        :(\r\n            fetch('http://39.118.174.168:8000/board/premiumst/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                console.log(posts);\r\n                setTodoList(posts)\r\n            })\r\n        )\r\n    },[pgN])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     fetch('http://39.118.174.168:8000/api/current_user/', {\r\n    //       headers: {\r\n    //         Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //       }\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(json => {\r\n    //       // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n    //       if (json.id) {\r\n    //         setUserId(json.id)\r\n    //         //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    //     }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n    //             method : 'PATCH',\r\n    //             headers: {\r\n    //                 Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //             },\r\n    //         })\r\n    //         .then((res)=>res.json())\r\n    //         // 데이터베이스에서 가져오는 정확한 명\r\n    //         .then((userData)=> {\r\n             \r\n    //             setUserNickname(userData.nickname)\r\n                \r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //           });;\r\n    //     }).catch(error => {\r\n    //         console.log(error)\r\n    //       });\r\n    // },[userId])\r\n\r\n\r\n    const ClickFilter = (lang)=>{\r\n        let Num = 0;\r\n        let List = [...languagefilterList];\r\n\r\n        List.map((a)=>{\r\n            if (a === lang) {\r\n                Num = 1;\r\n            }\r\n            return Num;\r\n        })\r\n\r\n        if (Num === 0) {\r\n            List.push(lang)\r\n        }else{\r\n            List.splice(List.indexOf(lang),1)\r\n        }\r\n        setLanguageilterList(List)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"trend-section\">\r\n            <main className=\"trend-main\">\r\n                <div className=\"main-section\">\r\n                        {\r\n                            todolist.slice(0).reverse().map((a)=>{\r\n                                let Y = a.pub_date.split('-')[0]\r\n                                let M = a.pub_date.split('-')[1]\r\n                                let D = a.pub_date.split('-')[2].split('T')[0]\r\n                                let boardFilterArticle;\r\n                                let Num;\r\n                                let list =  a.infomation.split(',')\r\n                                let path = a.contents.match(\"<img[^>]*src=[\\\"']?([^>\\\"']+)[\\\"']?[^>]*>\")\r\n\r\n    \r\n                                if(languagefilterList.length !== 0){\r\n                                    languagefilterList.map((c)=>{\r\n                                        if(list.indexOf(c) !== -1 && Num !== 0){\r\n                                            Num = 1;\r\n                                        }else{\r\n                                            Num = 0;\r\n                                            return Num;\r\n                                        }\r\n                                        return Num;\r\n                                    })\r\n                                    if(Num === 1){\r\n                                        boardFilterArticle = \r\n                                        <div className=\"article\" key={a.id}>\r\n                                            {\r\n                                                path === null\r\n                                                ? null\r\n                                                :(\r\n                                                    <Link to={\"/premiumstdetail/\" + a.id}>\r\n                                                        <div className=\"arcticle-img\">\r\n                                                        <img src={path[2]} alt=\"\"></img>\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                            <div className=\"article-content\">\r\n                                                <Link to={\"/premiumstdetail/\" + a.id}>\r\n                                                    <h4>{a.title}</h4>\r\n                                                    <div className=\"desc-wrapper\">\r\n                                                    \r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div className=\"sub-info\">\r\n                                                    <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                                </div>\r\n                                                <div className=\"filter-info\">\r\n                                                {\r\n                                                    list.map((L, i)=>{\r\n                                                        return(\r\n                                                            <p key={i}>#{L}</p>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"article-footer\">\r\n                                                <Link to={\"/mysite/\" + a.user_pk}>\r\n                                                    <img src={a.profileImage} alt=\"\"></img>\r\n                                                    <span>\"by \" <b>{a.nickname}</b></span>\r\n                                                </Link>\r\n                                                <div className=\"likes\">\r\n                                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                                                    {a.like}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                }else{\r\n                                    boardFilterArticle = \r\n                                    <div className=\"article\" key={a.id}>\r\n                                        {\r\n                                            path === null\r\n                                            ? null\r\n                                            :(\r\n                                                <Link to={\"/premiumstdetail/\" + a.id}>\r\n                                                    <div className=\"arcticle-img\">\r\n                                                        {<img src={path[2]} alt=\"\"></img>}\r\n                                                    </div>\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"article-content\">\r\n                                            <Link to={\"/premiumstdetail/\" + a.id}>\r\n                                                <h4>{a.title}</h4>\r\n                                                <div className=\"desc-wrapper\">\r\n                                                \r\n                                                </div>\r\n                                            </Link>\r\n                                            <div className=\"sub-info\">\r\n                                                <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                            </div>\r\n                                            <div className=\"filter-info\">\r\n                                            {\r\n                                                list.map((L, i)=>{\r\n                                                    return(\r\n                                                        <p key={i}>#{L}</p>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"article-footer\">\r\n                                            <Link to={\"/mysite/\" + a.user_pk}>\r\n                                                <img src={a.profileImage} alt=\"\"></img>\r\n                                                <span>\"by \" <b>{a.nickname}</b></span>\r\n                                            </Link>\r\n                                            <div className=\"likes\">\r\n                                                <svg \r\n                                                width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"/></svg>\r\n                                                {a.like}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                \r\n                                return(\r\n                                    boardFilterArticle\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </main>\r\n            <aside className=\"pDRpR\">\r\n            <div className=\"eyrfCG\">\r\n                <div className=\"filter__head\">\r\n                    \r\n                </div>\r\n                <section>\r\n                <ul style={{ listStyleType: \"none\"}}>\r\n                    {\r\n                    filterList.map((a)=>{\r\n                        return(\r\n                        <li key={a.id}>\r\n                            <input id={a.language} className=\"filters-input__checkbox\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\r\n                            <label className=\"input__label\" htmlFor={a.language} onClick={()=>{ClickFilter(a.language)}}>\r\n                            <span>\r\n                                {a.language}</span>\r\n                            <span className=\"filters-input__tick\">\r\n                                <svg \r\n                                width=\"13\"\r\n                                height=\"13\">\r\n                                <use xlinkHref=\"#check\">\r\n                                    <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\r\n                                </use>\r\n                                </svg>\r\n                            </span>\r\n                            </label>\r\n                        </li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                </section>\r\n            </div>  \r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\nexport default Premiumst;","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport '../views/Primium.css';\r\n\r\nfunction Student(){\r\n    let [filterList] = useState([{id : 1, language: '챌린저'}, {id : 2, language : '그랜드마스터'},\r\n    {id : 3, language : '마스터'}, {id : 4, language :'다이아몬드'}, {id : 5, language:'플레티넘'},\r\n    {id : 6, language:'골드'}, {id : 7, language:'실버'}, {id : 8, language:'브론즈'}, {id :9, language:'아이언'}])\r\n    let [languagefilterList, setLanguageilterList] = useState(\"\");\r\n    let [todolist, setTodoList] = useState([]);\r\n    let pgN = document.location.href.split('/')[3]\r\n    // let [userNickname, setUserNickname] = useState()\r\n    // let [userId, setUserId] = useState()\r\n\r\n    useEffect(()=>{\r\n        pgN === \"like\"\r\n        ?(\r\n            fetch('http://39.118.174.168:8000/board/student/like/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                setTodoList(posts);\r\n            })\r\n        )\r\n        :(\r\n            fetch('http://39.118.174.168:8000/board/student/')\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                \r\n                setTodoList(posts)\r\n            })\r\n        )\r\n    },[pgN])\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     fetch('http://39.118.174.168:8000/api/current_user/', {\r\n    //       headers: {\r\n    //         Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //       }\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(json => {\r\n    //       // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n    //       if (json.id) {\r\n    //         setUserId(json.id)\r\n    //         //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    //     }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n    //             method : 'PATCH',\r\n    //             headers: {\r\n    //                 Authorization: `JWT ${localStorage.getItem('token')}`\r\n    //             },\r\n    //         })\r\n    //         .then((res)=>res.json())\r\n    //         // 데이터베이스에서 가져오는 정확한 명\r\n    //         .then((userData)=> {\r\n             \r\n    //             setUserNickname(userData.nickname)\r\n                \r\n    //         })\r\n    //         .catch(error => {\r\n               \r\n    //           });;\r\n    //     }).catch(error => {\r\n           \r\n    //       });\r\n    // },[userId])\r\n\r\n\r\n    const ClickFilter = (lang)=>{\r\n        let Num = 0;\r\n        let List = [...languagefilterList];\r\n\r\n        List.map((a)=>{\r\n            if (a === lang) {\r\n                Num = 1;\r\n            }\r\n            return Num;\r\n        })\r\n\r\n        if (Num === 0) {\r\n            List.push(lang)\r\n        }else{\r\n            List.splice(List.indexOf(lang),1)\r\n        }\r\n        setLanguageilterList(List)\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"trend-section\">\r\n            <main className=\"trend-main\">\r\n                <div className=\"main-section\">\r\n                        {\r\n                            todolist.slice(0).reverse().map((a)=>{\r\n                                let Y = a.pub_date.split('-')[0]\r\n                                let M = a.pub_date.split('-')[1]\r\n                                let D = a.pub_date.split('-')[2].split('T')[0]\r\n                                let boardFilterArticle;\r\n                                let Num;\r\n                                let list =  a.infomation.split(',')\r\n                                let path = a.contents.match('(src=\"([^>]+)\")');\r\n                                if(languagefilterList.length !== 0){\r\n                                    languagefilterList.map((c)=>{\r\n                                        if(list.indexOf(c) !== -1 && Num !== 0){\r\n                                            Num = 1;\r\n                                        }else{\r\n                                            Num = 0;\r\n                                            return Num;\r\n                                        }\r\n                                        return Num;\r\n                                    })\r\n                                    if(Num === 1){\r\n                                        boardFilterArticle = \r\n                                        <div className=\"article\" key={a.id}>\r\n                                            {\r\n                                                path === null\r\n                                                ? null\r\n                                                :(\r\n                                                    <Link to={\"/studentdetail/\" + a.id}>\r\n                                                        <div className=\"arcticle-img\">\r\n                                                            {<img src={path[2]} alt=\"\"></img>}\r\n                                                        </div>\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                            <div className=\"article-content\">\r\n                                                <Link to={\"/studentdetail/\" + a.id}>\r\n                                                    <h4>{a.title}</h4>\r\n                                                    <div className=\"desc-wrapper\">\r\n                                                    \r\n                                                    </div>\r\n                                                </Link>\r\n                                                <div className=\"sub-info\">\r\n                                                    <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                                </div>\r\n                                                <div className=\"filter-info\">\r\n                                                {\r\n                                                    list.map((L, i)=>{\r\n                                                        return(\r\n                                                            <p key={i}>#{L}</p>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                            </div>\r\n                                            <div className=\"article-footer\">\r\n                                                <Link to={\"/mysite/\" + a.user_pk}>\r\n                                                    <img src={a.profileImage} alt=\"\"></img>\r\n                                                    <span>\"by \" <b>{a.nickname}</b></span>\r\n                                                </Link>\r\n                                                <div className=\"likes\">\r\n                                                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                                                    {a.like}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                }else{\r\n                                    boardFilterArticle = \r\n                                    <div className=\"article\" key={a.id}>\r\n                                        {\r\n                                            path === null\r\n                                            ? null\r\n                                            :(\r\n                                                <Link to={\"/studentdetail/\" + a.id}>\r\n                                                    <div className=\"arcticle-img\">\r\n                                                        {<img src={path[2]} alt=\"\"></img>}\r\n                                                    </div>\r\n                                                </Link>\r\n                                            )\r\n                                        }\r\n                                        <div className=\"article-content\">\r\n                                            <Link to={\"/studentdetail/\" + a.id}>\r\n                                                <h4>{a.title}</h4>\r\n                                                <div className=\"desc-wrapper\">\r\n                                                \r\n                                                </div>\r\n                                            </Link>\r\n                                            <div className=\"sub-info\">\r\n                                                <span>{Y + \"년 \" + M + \"월 \" + D + \"일\"}</span>\r\n                                            </div>\r\n                                            <div className=\"filter-info\">\r\n                                            {\r\n                                                list.map((L, i)=>{\r\n                                                    return(\r\n                                                        <p key={i}>#{L}</p>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                        </div>\r\n                                        <div className=\"article-footer\">\r\n                                            <Link to={\"/mysite/\" + a.user_pk}>\r\n                                                <img src={a.profileImage} alt=\"\"></img>\r\n                                                <span>\"by \" <b>{a.nickname}</b></span>\r\n                                            </Link>\r\n                                            <div className=\"likes\">\r\n                                                <svg \r\n                                                width=\"100%\" height=\"100%\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"/></svg>\r\n                                                {a.like}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                \r\n                                return(\r\n                                    boardFilterArticle\r\n                                )\r\n                            })\r\n                        }\r\n                </div>\r\n            </main>\r\n            <aside className=\"pDRpR\">\r\n            <div className=\"eyrfCG\">\r\n                <div className=\"filter__head\">\r\n                    \r\n                </div>\r\n                <section>\r\n                <ul style={{ listStyleType: \"none\"}}>\r\n                    {\r\n                    filterList.map((a)=>{\r\n                        return(\r\n                        <li key={a.id}>\r\n                            <input id={a.language} className=\"filters-input__checkbox\" value=\"action\" type=\"checkbox\" data-type=\"genres\"></input>\r\n                            <label className=\"input__label\" htmlFor={a.language} onClick={()=>{ClickFilter(a.language)}}>\r\n                            <span>\r\n                                {a.language}</span>\r\n                            <span className=\"filters-input__tick\">\r\n                                <svg \r\n                                width=\"13\"\r\n                                height=\"13\">\r\n                                <use xlinkHref=\"#check\">\r\n                                    <svg viewBox=\"0 0 24 24\" id=\"check\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436L24 5.782z\"></path></svg>\r\n                                </use>\r\n                                </svg>\r\n                            </span>\r\n                            </label>\r\n                        </li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n                </section>\r\n            </div>  \r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\nexport default Student;","import React, { useState, useEffect } from 'react';\r\nimport '../views/Detail.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { useHistory } from 'react-router'\r\n\r\nfunction Detail(props){\r\n    const history = useHistory()\r\n    // let Today = new Date();\r\n    // let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate()\r\n\r\n    let pgN = document.location.href.split('/')[4]\r\n\r\n    let [detailList, setDetailList] = useState({});\r\n    let [detailUserInfo, setDetailUserInfo] = useState({});\r\n    let [detailDate, setDetailDate] = useState();\r\n    let [detailLang, setDetailLang] = useState([]);\r\n\r\n    let [detailLikedUser, setDetailLikedUser] = useState([]);\r\n    let [svgColor, setSvgColor] = useState({});\r\n\r\n    let [currnetUser, setCurrentUser] = useState({});\r\n    \r\n    useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/board/'+ props.path + pgN + \"/\")\r\n        .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                // console.log(posts)\r\n                setDetailList(posts)\r\n                let Y = posts.pub_date.split('-')[0]\r\n                let M = posts.pub_date.split('-')[1]\r\n                let D = posts.pub_date.split('-')[2].split('T')[0]\r\n                setDetailDate(Y + \"년 \" + M + \"월 \" + D + \"일\")\r\n                setDetailLang(posts.infomation.split(','))\r\n                setDetailLikedUser(posts.likedUser.split(','))\r\n                fetch('http://39.118.174.168:8000/api/current_user/', {\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n                })\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n                        method : 'PATCH',\r\n                        headers: {\r\n                            Authorization: `JWT ${localStorage.getItem('token')}`\r\n                        },\r\n                    })\r\n                    .then((res)=>res.json())\r\n                    .then((userData)=> {\r\n                        setCurrentUser(userData)\r\n                    })\r\n                })  \r\n                fetch('http://39.118.174.168:8000/api/profile/' + posts.user_id + '/')\r\n                .then((res)=>res.json())\r\n                .then((info)=>{\r\n                    setDetailUserInfo(info)\r\n                })\r\n            })\r\n    },[pgN,props.path])\r\n\r\n    const DelBoard = ()=>{\r\n        if(currnetUser.user_id === detailList.user_id){\r\n            if(window.confirm('정말 삭제하시겠습니까 ?')===true){\r\n                fetch('http://39.118.174.168:8000/board/'+ props.path + pgN + \"/delete/\", {\r\n                method : 'DELETE',\r\n                headers: {\r\n                    Authorization : `JWT ${localStorage.getItem('token')}`,\r\n                }\r\n                })\r\n                .then(res => res.json())\r\n                .catch(error => console.error('Error:', error))\r\n                .then(response => console.log('Success:', JSON.stringify(response)));\r\n                window.location.href = '/' + props.path;\r\n            }\r\n        }else{\r\n            alert(\"권한이 없습니다.\")\r\n        }\r\n    }\r\n\r\n    const UpdateBoard = () => {\r\n        detailList.user_id === currnetUser.user_id\r\n        ? history.push(\"/update/\"+pgN)\r\n        : alert(\"권한이 없습니다.\")\r\n    }\r\n\r\n\r\n    let sendData;\r\n    const handleEffect = (ClickLikeBtn) => {\r\n        if(currnetUser.user_id !== null && currnetUser.user_id !== undefined && currnetUser.user_id !== \"\"){\r\n        // detailLikedUser라는 state값이 currentUser.user_pk(접속해있는 유저의 pk값)을 index로 가지고있지 않다면\r\n            if(detailLikedUser.indexOf(currnetUser.user_id + \"\") === -1){ //추천\r\n                let arr = [...detailLikedUser]\r\n                arr.push(currnetUser.user_id)\r\n                let plusUser = arr.join(',')\r\n                sendData = {\r\n                    like : detailList.like + 1,\r\n                    likedUser : plusUser\r\n                }\r\n                setSvgColor({color : \"black\"})\r\n            }else{ //추천취소\r\n                let arr = [...detailLikedUser]\r\n                arr.splice(arr.indexOf(currnetUser.user_id + \"\"), 1)\r\n                let minusUser = arr.join(',')\r\n                 sendData = {\r\n                    like : detailList.like - 1,\r\n                    likedUser : minusUser\r\n                }\r\n                setSvgColor({color : \"gray\"}) \r\n            }\r\n            ClickLikeBtn()\r\n        }else {\r\n            alert(\"로그인이 필요합니다.\")\r\n            window.location.href =\"/login\"\r\n        }\r\n        \r\n    }\r\n\r\n    const ClickLikeBtn = ()=>{\r\n        let form_data = new FormData();\r\n        form_data.append('like', sendData.like);\r\n        form_data.append('likedUser', sendData.likedUser);\r\n\r\n        fetch('http://39.118.174.168:8000/board/'+ props.path + pgN + \"/update/\", {\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(()=>{\r\n            fetch('http://39.118.174.168:8000/board/'+ props.path + pgN + \"/\")\r\n            .then((res)=>res.json())\r\n            .then((posts)=>{\r\n                setDetailList(posts)\r\n                console.log(posts)\r\n                setDetailLikedUser(posts.likedUser.split(','))\r\n            });\r\n        })\r\n    }    \r\n\r\n    return(\r\n        <>\r\n            <div className=\"detail__container\">\r\n                <div className=\"detail__head-wrapper\">\r\n                    <h1>{detailList.title}</h1>\r\n                    <div className=\"detail__head-btn\">\r\n                        {\r\n                            detailList.user_id === currnetUser.user_id\r\n                            ?(\r\n                                <>\r\n                                <button onClick={UpdateBoard}>수정</button>\r\n                                <button onClick={DelBoard}>삭제</button>\r\n                                </>\r\n                            )\r\n                            : null\r\n                        }\r\n                    </div>\r\n                    <div className=\"detail__head-info\">\r\n                        <div className=\"information\">\r\n                            <span className=\"detail__head-username\">{detailList.nickname}</span>\r\n                            <span className=\"separator\">·</span>\r\n                            <span>{detailDate}{detailList.updateCount === 0 ? null : \"  ·  수정됨\"}</span>\r\n                        </div>\r\n                        <div className=\"detail__head-mobileLike\">\r\n                            <button className=\"likeBtn\">\r\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                                <span>{detailList.like}</span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"detail__head-like\">\r\n                        <div className=\"iCfLcp\">\r\n                            <div className=\"dtrfkW\" onClick={()=>{handleEffect(ClickLikeBtn)}}>\r\n                                <svg style={svgColor} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"currentColor\" d=\"M18 1l-6 4-6-4-6 5v7l12 10 12-10v-7z\"></path></svg>\r\n                            </div>\r\n                            <div className=\"sc-iyvyFf bJqQCy\">{detailList.like}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"filetrList\">\r\n                    {\r\n                        detailLang.map((a, i)=>{\r\n                            return(\r\n                                <p key={i}>#{a}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                    {\r\n                        detailList.image === null\r\n                        ? null\r\n                        : <img src={detailList.image} alt=\"\"></img>\r\n                    }\r\n                   \r\n                </div>\r\n                <div className=\"detail__body-wrapper\">\r\n                    <div className=\"detail__content\">\r\n                        <p dangerouslySetInnerHTML={{\r\n                            __html: detailList.contents\r\n                        }}></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"detail__footer-wrapper\">\r\n                    <div className=\"detail__writerInfo\">\r\n                        <div className=\"detail__topInfo\">\r\n                            <Link to={\"/mysite/\" + detailList.id}>\r\n                                <img src={detailList.profileImage} alt=\"\"></img>\r\n                            </Link>\r\n                            <div className=\"detail__userInfo\">\r\n                                <div className=\"description\">{detailUserInfo.myInfo}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sc-epnACN eIoWCE\"></div>\r\n                        <div className=\"detail__buttomInfo\">\r\n                      \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"detail__comment-wrapper\">\r\n                    {/* <h4>{commentList.length + reCommentList.length}개의 댓글</h4> */}\r\n                    <div className=\"detail__comment-width\">\r\n                        {/* <div>\r\n                            <textarea ref={commentTxt} defaultValue=\"\" placeholder=\"댓글을 작성하세요\" className=\"comment__textarea\" onChange={(e)=>{setCommentContent(e.target.value)}}></textarea>\r\n                            <div className=\"buttons-wrapper\">\r\n                                <button className=\"comment__btn\" onClick={()=>{CommentEffect(CommentSubmit)}}>댓글 작성</button>\r\n                            </div>\r\n                        </div> */}\r\n                        <div className=\"margin__top\">\r\n                            <div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Detail;","import React, {useState, useEffect} from 'react';\nimport { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n// import HomePage from \"./views/HomePage\";\nimport LoginPage from \"./views/LoginPage\";\nimport RegisterPage from \"./views/RegisterPage\";\nimport './index.css';\nimport Sidebarmenu from \"./Sidebar/Sidebarmenu\";\nimport Header from \"./views/Header\";\nimport Profile from \"./Sidebar/Profile\";\nimport Tier from \"./Sidebar/Tier\";\nimport Point from \"./Sidebar/Point\";\nimport Pointcg from \"./Sidebar/Pointcg\";\nimport Boardwtite from \"./views/Boardwrite\";\nimport Premium from \"./views/Premium\";\nimport Partner from './views/Partner';\nimport Premiumst from './views/Premiumst';\nimport Student from './views/Student';\nimport Detail from './views/Detail';\n// import { colors } from '@material-ui/core';\n\nfunction App(){\n\n  const [modal, setModal] = useState(false);\n  const [user, setUser] = useState([])\n  let [isAuthenticated, setisAuthenticated] = useState(localStorage.getItem('token') ? true : false)\n\n  const userHasAuthenticated = (authenticated, username, token) => { \n    setisAuthenticated(authenticated);\n    setUser(username);\n    localStorage.setItem('token', token);\n    // console.log(localStorage.getItem(token));\n    // window.location.reload();\n  } //회원가입이나 로그인이 성공했을 때 토큰을 저장\n\n  // if(flag === 1){\n  //   // window.location.reload();\n  //   setFlag(0);\n  //   console.log(flag);\n  // } else{\n\n  const handleLogout = () => {\n    setisAuthenticated(false);\n    setUser(\"\");\n    localStorage.removeItem('token');\n    // setModal(false)\n  }//로그아웃\n\n  useEffect(()=>{\n    if(isAuthenticated){\n      setModal(true);\n    }\n    else{\n      setModal(false);\n    }\n  },[isAuthenticated])\n\n  useEffect(() => {\n    if(isAuthenticated) {\n      //Token 값이 타당간가 /validate 요청을 통해 확인하고\n      // 상태 코드가 200이라면 /api/current 요청으로 user정보 받아옴\n      console.log(`${localStorage.getItem('token')}`);\n      fetch('http://39.118.174.168:8000/api/validate/', {\n        method: 'POST',\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      })\n      .then(res => {\n        fetch('http://39.118.174.168:8000/api/current_user/', {\n          method: 'GET',\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          if(json.username) {\n            setUser(json.username);\n          }\n          else{\n            //유저가 등록되지 않았다면 로그인 버튼이 나오도록\n            setModal(false)\n            setisAuthenticated(false)\n        }\n        // Refresh Token을 발급 -> 만료 시간 연장\n        fetch('http://39.118.174.168:8000/api/refresh/', {\n          method : 'POST',\n          headers: {\n            'Content-Type' : 'application/json'\n          },\n          body: JSON.stringify({\n            token: localStorage.getItem('token')\n          })\n        })\n        .then(res => res.json())\n        .then((json)=>{\n          userHasAuthenticated(true, json.user.username, json.token);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      })\n      .catch(error => {\n        handleLogout();\n        console.log(error);\n      });\n    })\n    .catch(error => {\n      handleLogout();\n      console.log(error);\n    })\n  }\n}, [isAuthenticated])\n\n\n  return (\n    <Router>\n      <header>\n            \n            <div className=\"Title\">\n                <div className=\"Leftside\">\n                    \n                    <Link to=\"/\">\n                    <a className=\"T_title\" href=\"/\">LoLtopia</a>\n                    </Link>\n                </div>\n          \n                <div className=\"Rightside\">\n                    <div className=\"Another\">\n                        {/* <Header modal={modal} handleLogout={handleLogout}/> */}\n                    </div>   \n                    \n                </div>\n            \n            </div>\n            <div className=\"Navbar\">\n                <div className=\"LeftSide\">\n                    <div className=\"Links\">\n                        \n                        <Link to=\"/premium\">\n                        프리미엄 파트너\n                        </Link>\n                        \n                        <Link to=\"/partner\">\n                        일반 파트너\n                        </Link>\n\n                        <Link to=\"/premiumst\">\n                        프리미엄 수강생\n                        </Link>\n\n                        <Link to=\"/student\">\n                        일반 수강생\n                        </Link>\n                        \n                    </div>\n                </div>\n            </div>\n    \n      </header>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n             <Header modal={modal} handleLogout={handleLogout}/>\n             <Premium />\n            {/* <HomePage modal={modal} user={user} userHasAuthenticated={userHasAuthenticated} /> */}\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage \n            setModal={setModal} userHasAuthenticated={userHasAuthenticated}/>\n          </Route>\n          <Route exact path=\"/register\">\n            <RegisterPage setModal={setModal} userHasAuthenticated={userHasAuthenticated}/>\n          </Route> \n\n          <Route path=\"/Sidebarmenu\" exact component={Sidebarmenu}>\n       \n          </Route>\n\n          <Route exact path=\"/profile\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n            <Profile handleLogout={handleLogout}/>\n            </Route>  \n          <Route exact path=\"/tier\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n            <Tier />\n          </Route>\n\n          <Route exact path=\"/point\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Point />\n          </Route>\n\n          <Route exact path=\"/pointcg\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Pointcg />\n          </Route>\n \n          <Route path=\"/boardwtite\">\n          <Boardwtite user={user} />\n          <Header modal={modal} handleLogout={handleLogout}/>\n          </Route>\n\n          <Route exact path=\"/premium\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Premium />\n          </Route>\n\n          <Route exact path=\"/partner\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Partner />\n          </Route>\n\n          <Route exact path=\"/premiumst\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Premiumst />\n          </Route>\n\n          <Route exact path=\"/student\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Student />\n          </Route>\n\n          <Route path=\"/premiumdetail\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Detail user={user} path=\"premium/\"/>\n          </Route>\n\n          <Route path=\"/partnerdetail\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Detail user={user} path=\"partner/\"/>\n          </Route>\n\n          <Route path=\"/premiumstdetail\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Detail user={user} path=\"premiumst/\"/>\n          </Route>\n\n          <Route path=\"/studentdetail\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Detail user={user} path=\"student/\"/>\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import { Provider } from 'react-redux';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://39.118.174.168:8000\";\naxios.defaults.withCredentials = true;\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}